#!/usr/bin/perl -w

sub parse_hunk_header {
	my ($line) = @_;
	my ($o_ofs, $o_cnt, $n_ofs, $n_cnt) =
	    $line =~ /^@@ -(\d+)(?:,(\d+))? \+(\d+)(?:,(\d+))? @@/;
	$o_cnt = 1 unless defined $o_cnt;
	$n_cnt = 1 unless defined $n_cnt;
	return ($o_ofs, $o_cnt, $n_ofs, $n_cnt);
}

sub get_blame_prefix {
	my ($line) = @_;
	$line =~ /^(\^?[0-9a-f]+\s+(\S+\s+)?\([^\)]+\))/ or die "bad blame output: $line";
	return $1;
}

sub get_blame_summary {
	my (@lines) = @_;

	my @summary;
	foreach my $line (@lines) {
		if ($line =~ m/^summary\s(.*)/i) {
			push @summary, $1;
		}
	}

	return join ("\r\n", @summary);
}

my ($oldrev, $newrev) = @ARGV;
$oldrev ||= 'HEAD';
if ($newrev) {
	open($diff, '-|', 'git', '--no-pager', 'diff', "$oldrev...$newrev") or die;
} else {
	open($diff, '-|', 'git', '--no-pager', 'diff', $oldrev) or die;
}

my ($pre, $post);
my $filename;
while (<$diff>) {
	if (m{^diff --git ./(.*) ./\1$}) {
		close $pre if defined $pre;
		close $post if defined $post;
		print;
		$prefilename = "./" . $1;
		$postfilename = "./" . $1;
		$delete = $create = 0;
	} elsif (m{^new file}) {
		$create = 1;
		$prefilename = '/dev/null';
	} elsif (m{^deleted file}) {
		$delete = 1;
		$postfilename = '/dev/null';
	} elsif (m{^--- $prefilename$}) {
		# ignore
		print;
	} elsif (m{^\+\+\+ $postfilename$}) {
		# ignore
		print;
	} elsif (m{^@@ }) {
		my ($o_ofs, $o_cnt, $n_ofs, $n_cnt)
			= parse_hunk_header($_);
		my $o_end = $o_ofs + $o_cnt - 1;
		my $n_end = $n_ofs + $n_cnt - 1;
		if (!$create) {
			open($pre, '-|', 'git', 'blame', '-M', '--porcelain', "-L$o_ofs,$o_end",
			     $oldrev, '--', $prefilename) or die;
		}
		if (!$delete) {
			if ($newrev) {
				open($post, '-|', 'git', 'blame', , '--porcelain', '-M', "-L$n_ofs,$n_end",
				     $newrev, '--', $postfilename) or die;
			} else {
				open($post, '-|', 'git', 'blame', , '--porcelain', '-M', "-L$n_ofs,$n_end",
				     '--', $postfilename) or die;
			}
		}
	} elsif (m{^ }) {
		#print get_blame_prefix(scalar <$pre>), "\t", $_;
		#scalar <$post>; # discard
	} elsif (m{^\-}) {
		my @lines = <$pre>;
		print get_blame_summary(@lines);
	} elsif (m{^\+}) {
		#print get_blame_prefix(scalar <$post>), "\t", $_;
	}
}
